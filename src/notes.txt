@media only screen and (max-width: 600px) {
  .App {
    flex-direction: column;
  }

  .navigation {
    position: fixed;
    top: 100;
    left: 0;
    width: 100%; 
    height: auto;
    background-color: lightcoral;
    display: flex;
    flex-direction: column;
    padding: 10px;
    gap: 10px;
    transition: width 0.3s ease;
    align-items: center;
  }
  
    .my-img {
      border-radius: 50%;
      height: 150px;
      width: 150px;
      margin: 20px auto;
    }
  
    .my-info {
      height: auto; /* Set to auto for dynamic height */
      border-radius: 10px;
      margin: 10px; /* Adjust margin as needed */
      max-width: 100%; /* Adjust max-width to fit the container */
      text-align: center; /* Center the text */
    }
  
    .my-info p {
      font-size: 12px; /* Adjust font size as needed */
      line-height: 1.2;
      padding: 5px;
      border-radius: 5px;
    }
  
    .MY-Port {
      position: static;
      left: 0;
      top: 0;
    }
  }
  
body {
  margin: 0;
  padding: 0;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}


https://drive.google.com/file/d/15eCt9PFF_IUGENHCTXi3Bq-XTdDIIJLL/view?usp=sharing

//////////////////////////////////////////////////////////////////////////////////////////////////////
contact me 
import React, { useRef, useState } from 'react';
import emailjs from '@emailjs/browser';
import TextField from '@mui/material/TextField';
import Button from '@mui/material/Button';
import Box from '@mui/material/Box';
import ThankYouPage from './ThankYouPage'; // Import the ThankYouPage component

export function ContactMe() {
  const form = useRef();
  const [userName, setUserName] = useState('');
  const [userEmail, setUserEmail] = useState('');
  const [messages, setMessages] = useState('');
  const [submitted, setSubmitted] = useState(false); // State to track form submission

  const handleUserNameChange = (event) => {
    const newValue = event.target.value;
    setUserName(newValue);
  };

  const handleUserEmail = (event) => {
    const newValue = event.target.value;
    setUserEmail(newValue);
  };

  const handleMessages = (event) => {
    const newValue = event.target.value;
    setMessages(newValue);
  };

  const sendEmail = (e) => {
    e.preventDefault();

    emailjs
      .sendForm('service_k12zg63', 'template_s3uogr7', form.current, {
        publicKey: '3t-UJq9PZDhYarRuj',
      })
      .then(
        () => {
          console.log('SUCCESS!');
          setUserName('');
          setUserEmail('');
          setMessages('');
          setSubmitted(true); // Set submitted to true after successful form submission
        },
        (error) => {
          console.log('FAILED...', error.text);
        },
      );
  };

  // Render ThankYouPage if form is submitted
  if (submitted) {
    return <ThankYouPage />;
  }

  // Render the form otherwise
  return (
    <div className='contact-me'>
      <form ref={form} onSubmit={sendEmail}>
        <Box
          sx={{
            display: 'flex',
            flexDirection: 'column',
            gap: '1rem',
            alignItems: 'center',
          }}
        >
          <h1>Contact Us</h1> {/* Add catchy heading here */}
          <TextField
            sx={{ width: '30rem' }}
            color="secondary"
            id="outlined-textarea-name"
            label="Name"
            placeholder="Your Name"
            multiline
            value={userName}
            onChange={handleUserNameChange}
            inputProps={{ name: 'user_name' }}
          />
          <TextField
            sx={{ width: '100%' }}
            color="secondary"
            id="outlined-textarea-email"
            label="Email"
            placeholder="Your Email"
            multiline
            value={userEmail}
            onChange={handleUserEmail}
            inputProps={{ name: 'user_email' }}
          />
          <TextField
            sx={{ width: '100%' }}
            color="secondary"
            id="outlined-textarea-message"
            label="Message"
            value={messages}
            onChange={handleMessages}
            inputProps={{ name: 'message' }}
            placeholder="Your Message"
            multiline
          />
          <Button size='larger' type="submit" variant="contained" color="secondary">
            Send
          </Button>
        </Box>
      </form>
    </div>
  );
}
"Let's Connect! Drop Us a Line."